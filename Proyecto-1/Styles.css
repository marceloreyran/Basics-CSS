* {
    margin: 0;
    padding: 0;

}

.navegacion {
    transform: translateY(-100%);
    animation: show; /* Una vez que hemos definido la animación, podemos aplicarla a un elemento utilizando la propiedad animation: show */
    animation-duration: 3s;
    animation-iteration-count: infinite;
    background-color: azure;
    border: 4px solid papayawhip;
}


/*La regla @keyframes en CSS se utiliza para definir animaciones personalizadas.
Permite especificar una serie de estilos que se aplicarán gradualmente a un elemento a lo largo del tiempo.*/

@keyframes show {
    0% {
        transform: translateY(-100%);
    }

    50% {
        transform: translateY(0);
    }

    100% {
        transform: translateY(-100%);
    }
}


.menu li {
    font-family: 'Courier New', Courier, monospace;
    font-size: 15px;
    font-weight: bold;
    padding: 15px;


}